from django.http import HttpResponse, JsonResponse
import os
from requests import Response

from core import views
from core.views import ht, config, renderMainPanel, saveFileOutput, Logger, sendPool, sendPool

# Create your views here.

# Automatic view function for injectPayloadToWindowsTerminalProfile
def injectPayloadToWindowsTerminalProfile(request):
	# Init of the view injectPayloadToWindowsTerminalProfile
	try:
		# Pool call
		response, repool = sendPool(request, 'injectPayloadToWindowsTerminalProfile')
		if response or repool:
			if repool:
				return HttpResponse(response)
			return JsonResponse({ "data" : str(response) })
		else:
			# Parameter payload
			payload = request.POST.get('payload')

			try:
				# Save file filename
				filename_filename, location_filename, filename = saveFileOutput(request.FILES['filename'], 'infector', 'malware')
			except Exception as e:
				# If not param filename
				if request.POST.get('is_async_injectPayloadToWindowsTerminalProfile', False):
					return JsonResponse({ "data" : str(e) })
				return renderMainPanel(request=request, popup_text=str(e))
			# Parameter update (Optional - Default False)
			update = request.POST.get('update', False)
			if not update:
				update = None

			# Execute, get result and show it
			result = ht.getModule('ht_infector').injectPayloadToWindowsTerminalProfile( payload=payload, filename=filename, update=update )
			if request.POST.get('is_async_injectPayloadToWindowsTerminalProfile', False):
				return JsonResponse({ "data" : result })
			return renderMainPanel(request=request, popup_text=result)
	except Exception as e:
		if request.POST.get('is_async_injectPayloadToWindowsTerminalProfile', False):
			return JsonResponse({ "data" : str(e) })
		return renderMainPanel(request=request, popup_text=str(e))
	